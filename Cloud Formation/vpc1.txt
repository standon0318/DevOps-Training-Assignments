{
	"AWSTemplateFormatVersion": "2010-09-09",

	"Description": "VPC that has one public subnets and two private subnets in different AZs NATs to enable instances in private subnets to access the internet",

	"Resources": {

		"VPC": {
			"Type": "AWS::EC2::VPC",
			"Properties": {
			
				"CidrBlock": "10.3.0.0/16",
				"Tags": [{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackId"
						}
					},
					{
						"Key": "Region",
						"Value": {
							"Ref": "AWS::Region"
						}
					},{
						"Key": "Name",
						"Value":"VPC"
						}
					,
					{
						"Key": "Network",
						"Value": "Public"
					}
				]
			}
		},
		"PublicSubnet": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
			
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": "10.3.1.0/24",
				"AvailabilityZone": {
					"Fn::Select": ["0", {
						"Fn::GetAZs": {
							"Ref": "AWS::Region"
						}
					}]
				},
				"Tags": [{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackId"
						}
					},{
						"Key": "Name",
						"Value":"PublicCfnSubnet"
						}
					,
					{
						"Key": "Network",
						"Value": "Public"
					}
				]
			}
		},



		"InternetGateway": {
			"Type": "AWS::EC2::InternetGateway",
			"Properties": {
				"Tags": [{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackId"
						}
					},{
						"Key": "Name",
						"Value":"CfnIg"
						}
					,
					{
						"Key": "Network",
						"Value": "Public"
					}
				]
			}
		},

		"GatewayToInternet": {
			"Type": "AWS::EC2::VPCGatewayAttachment",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"InternetGatewayId": {
					"Ref": "InternetGateway"
				}
			}
		},

		"PublicRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackId"
						}
					},{
						"Key": "Name",
						"Value":"PublicCfnRouteTable"
						}
					,
					{
						"Key": "Network",
						"Value": "Public"
					}
				]
			}
		},

		"PublicRoute": {
			"Type": "AWS::EC2::Route",
			"DependsOn": "GatewayToInternet",
			"Properties": {
				"RouteTableId": {
					"Ref": "PublicRouteTable"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "InternetGateway"
				}
			}
		},

		"PublicSubnetRouteTableAssociation": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "PublicSubnet"
				},
				"RouteTableId": {
					"Ref": "PublicRouteTable"
				}
			}
		},



		"PublicNetworkAcl": {
			"Type": "AWS::EC2::NetworkAcl",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [{
						"Key": "Application",
						"Value": {
							"Ref": "AWS::StackId"
						}
					},{
						"Key": "Name",
						"Value":"PublicCfnNetworkAcl"
						}
					,
					{
						"Key": "Network",
						"Value": "Public"
					}
				]
			}
		},
		"InboundPublicNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "PublicNetworkAcl"
				},
				"RuleNumber": "100",
				"Protocol": "-1",
				"RuleAction": "allow",
				"Egress": "false",
				"CidrBlock": "0.0.0.0/0"
				
			}
		},
		"OutboundPublicNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "PublicNetworkAcl"
				},
				"RuleNumber": "100",
				"Protocol": "-1",
				"RuleAction": "allow",
				"Egress": "true",
				"CidrBlock": "0.0.0.0/0"
				
				
			}
		},
		"PublicSubnetNetworkAclAssociation1": {
			"Type": "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "PublicSubnet"
				},
				"NetworkAclId": {
					"Ref": "PublicNetworkAcl"
				}
			}
		},
		"PrivateSubnet":{
		 "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : "10.3.2.0/24",
        "AvailabilityZone" : { "Fn::Select" : ["0", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } }]},
        "Tags" : [
          {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },{
						"Key": "Name",
						"Value":"PrivateCfnSubnet"
						}
					,
          {"Key" : "Network", "Value" : "Private" }
        ]
      }
		},
		 "PrivateRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [
          {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },
{
						"Key": "Name",
						"Value":"PrivateCfnRouteTable"
						}
					,
          {"Key" : "Network", "Value" : "Private"
		  }
        ]
      }
    },
	 "PrivateSubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnet" },
        "RouteTableId" : { "Ref" : "PrivateRouteTable" }
      }
    },
	 "PrivateNetworkAcl" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [
          {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },
          {
						"Key": "Name",
						"Value":"PrivateCfnNetworkAcl"
						}
					,
		  {"Key" : "Network", "Value" : "Private" }
        ]
      }
    },
	 "InboundPrivateNetworkAclEntry1" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "PrivateNetworkAcl"},
        "RuleNumber" : "100",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "10.3.1.0/24"
        
      }
    },
"InboundPrivateNetworkAclEntry2" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "PrivateNetworkAcl"},
        "RuleNumber" : "200",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "10.3.3.0/24"
    
      }
    },
	  "OutboundPrivateNetworkAclEntry1" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "PrivateNetworkAcl"},
        "RuleNumber" : "100",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "10.3.1.0/24"
      }
    },
	"OutboundPrivateNetworkAclEntry2" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "PrivateNetworkAcl"},
        "RuleNumber" : "200",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "10.3.3.0/24"
     
      }
    },
	 "PrivateSubnetNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnet" },
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" }
      }
    },
	"DataSubnet":{
		 "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : "10.3.3.0/24",
        "AvailabilityZone" : { "Fn::Select" : ["0", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } }]},
        "Tags" : [
          {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },{
						"Key": "Name",
						"Value":"DataCfnSubnet"
						}
					,
          {"Key" : "Network", "Value" : "Private" }
        ]
      }
		},
		 "DataRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [
          {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },
          {
						"Key": "Name",
						"Value":"DataCfnRouteTable"
						}
					,
		  {"Key" : "Network", "Value" : "Private" }
        ]
      }
    },
	 "DataSubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "DataSubnet" },
        "RouteTableId" : { "Ref" : "DataRouteTable" }
      }
    },
	 "DataNetworkAcl" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [
          {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },{
						"Key": "Name",
						"Value":"DataCfnNetworkAcl"
						}
					,
          {"Key" : "Network", "Value" : "Private" }
        ]
      }
    },
	 "InboundDataNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "DataNetworkAcl"},
        "RuleNumber" : "100",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "10.3.2.0/24"
      }
    },

	  "OutboundDataNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "DataNetworkAcl"},
        "RuleNumber" : "100",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "10.3.2.0/24"
      }
    },
	 "DataSubnetNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "DataSubnet" },
        "NetworkAclId" : { "Ref" : "DataNetworkAcl" }
      }
     }
	}
		
	
	}
